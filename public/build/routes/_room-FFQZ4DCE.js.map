{
  "version": 3,
  "sources": ["empty-module:~/utils/getIceServers.server", "../../../app/routes/_room.tsx", "../../../app/hooks/useIsOnline.ts", "../../../app/components/EnsureOnline.tsx", "../../../app/components/EnsurePermissions.tsx", "../../../app/hooks/usePeerConnection.tsx", "../../../app/hooks/useStablePojo.ts", "../../../app/hooks/useRoom.ts", "../../../app/utils/assertNever.ts", "../../../node_modules/partysocket/dist/chunk-KAXDW7R4.mjs", "../../../node_modules/partysocket/dist/chunk-QEVAA5MN.mjs", "../../../node_modules/partysocket/dist/chunk-BZZROSLB.mjs", "../../../node_modules/partysocket/dist/react.mjs", "../../../app/hooks/useRoomHistory.ts"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_room.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_room.tsx\");\n  import.meta.hot.lastModified = \"1738073419119.655\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/cloudflare';\nimport { Outlet, useLoaderData, useParams } from '@remix-run/react';\nimport { useObservableAsValue, useValueAsObservable } from 'partytracks/react';\nimport { useMemo, useState } from 'react';\nimport { from, of, switchMap } from 'rxjs';\nimport invariant from 'tiny-invariant';\nimport { EnsureOnline } from '~/components/EnsureOnline';\nimport { EnsurePermissions } from '~/components/EnsurePermissions';\nimport { Icon } from '~/components/Icon/Icon';\nimport { Spinner } from '~/components/Spinner';\nimport { usePeerConnection } from '~/hooks/usePeerConnection';\nimport useRoom from '~/hooks/useRoom';\nimport { useRoomHistory } from '~/hooks/useRoomHistory';\nimport { useStablePojo } from '~/hooks/useStablePojo';\nimport useUserMedia from '~/hooks/useUserMedia';\nimport { getIceServers } from '~/utils/getIceServers.server';\nfunction numberOrUndefined(value) {\n  const num = Number(value);\n  return isNaN(num) ? undefined : num;\n}\nfunction trackObjectToString(trackObject) {\n  if (!trackObject) return undefined;\n  return trackObject.sessionId + '/' + trackObject.trackName;\n}\nexport const loader = async ({\n  context\n}) => {\n  const {\n    env: {\n      TRACE_LINK,\n      API_EXTRA_PARAMS,\n      MAX_WEBCAM_FRAMERATE,\n      MAX_WEBCAM_BITRATE,\n      MAX_WEBCAM_QUALITY_LEVEL,\n      MAX_API_HISTORY\n    }\n  } = context;\n  return json({\n    userDirectoryUrl: context.env.USER_DIRECTORY_URL,\n    traceLink: TRACE_LINK,\n    apiExtraParams: API_EXTRA_PARAMS,\n    iceServers: await getIceServers(context.env),\n    feedbackEnabled: Boolean(context.env.FEEDBACK_URL && context.env.FEEDBACK_QUEUE && context.env.FEEDBACK_STORAGE),\n    maxWebcamFramerate: numberOrUndefined(MAX_WEBCAM_FRAMERATE),\n    maxWebcamBitrate: numberOrUndefined(MAX_WEBCAM_BITRATE),\n    maxWebcamQualityLevel: numberOrUndefined(MAX_WEBCAM_QUALITY_LEVEL),\n    maxApiHistory: numberOrUndefined(MAX_API_HISTORY)\n  });\n};\nexport default function RoomWithPermissions() {\n  return <EnsurePermissions>\n\t\t\t<EnsureOnline fallback={<div className=\"grid h-full place-items-center\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className=\"flex items-center gap-3 text-3xl font-black\">\n\t\t\t\t\t\t\t\t<Icon type=\"SignalSlashIcon\" />\n\t\t\t\t\t\t\t\tYou are offline\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}>\n\t\t\t\t<RoomPreparation />\n\t\t\t</EnsureOnline>\n\t\t</EnsurePermissions>;\n}\n_c = RoomWithPermissions;\nfunction RoomPreparation() {\n  _s();\n  const {\n    roomName\n  } = useParams();\n  invariant(roomName);\n  const userMedia = useUserMedia();\n  const room = useRoom({\n    roomName,\n    userMedia\n  });\n  return room.roomState.meetingId ? <Room room={room} userMedia={userMedia} /> : <div className=\"grid place-items-center h-full\">\n\t\t\t<Spinner className=\"text-gray-500\" />\n\t\t</div>;\n}\n_s(RoomPreparation, \"a65XRBFuhh/7UGDv6tZNY4FdFj0=\", false, function () {\n  return [useParams, useUserMedia, useRoom];\n});\n_c2 = RoomPreparation;\nfunction tryToGetDimensions(videoStreamTrack) {\n  if (videoStreamTrack === undefined ||\n  // TODO: Determine a better way to get dimensions in Firefox\n  // where this isn't API isn't supported. For now, Firefox will\n  // just not be constrained and scaled down by dimension scaling\n  // but the bandwidth and framerate constraints will still apply\n  // https://caniuse.com/?search=getCapabilities\n  videoStreamTrack.getCapabilities === undefined) {\n    return {\n      height: 0,\n      width: 0\n    };\n  }\n  const height = videoStreamTrack?.getCapabilities().height?.max ?? 0;\n  const width = videoStreamTrack?.getCapabilities().width?.max ?? 0;\n  return {\n    height,\n    width\n  };\n}\nfunction Room({\n  room,\n  userMedia\n}) {\n  _s2();\n  const [joined, setJoined] = useState(false);\n  const [dataSaverMode, setDataSaverMode] = useState(false);\n  const {\n    roomName\n  } = useParams();\n  invariant(roomName);\n  const {\n    userDirectoryUrl,\n    traceLink,\n    feedbackEnabled,\n    apiExtraParams,\n    iceServers,\n    maxWebcamBitrate = 1_200_000,\n    maxWebcamFramerate = 24,\n    maxWebcamQualityLevel = 1080,\n    maxApiHistory = 100\n  } = useLoaderData();\n  const params = new URLSearchParams(apiExtraParams);\n  invariant(room.roomState.meetingId, 'Meeting ID cannot be missing');\n  params.set('correlationId', room.roomState.meetingId);\n  const {\n    partyTracks,\n    iceConnectionState\n  } = usePeerConnection({\n    maxApiHistory,\n    apiExtraParams: params.toString(),\n    iceServers\n  });\n  const roomHistory = useRoomHistory(partyTracks, room);\n  const scaleResolutionDownBy = useMemo(() => {\n    const videoStreamTrack = userMedia.videoStreamTrack;\n    const {\n      height,\n      width\n    } = tryToGetDimensions(videoStreamTrack);\n    // we need to do this in case camera is in portrait mode\n    const smallestDimension = Math.min(height, width);\n    return Math.max(smallestDimension / maxWebcamQualityLevel, 1);\n  }, [maxWebcamQualityLevel, userMedia.videoStreamTrack]);\n  const videoEncodingParams = useStablePojo([{\n    maxFramerate: maxWebcamFramerate,\n    maxBitrate: maxWebcamBitrate,\n    scaleResolutionDownBy\n  }]);\n  const videoTrackEncodingParams$ = useValueAsObservable(videoEncodingParams);\n  const pushedVideoTrack$ = useMemo(() => partyTracks.push(userMedia.videoTrack$, videoTrackEncodingParams$), [partyTracks, userMedia.videoTrack$, videoTrackEncodingParams$]);\n  const pushedVideoTrack = useObservableAsValue(pushedVideoTrack$);\n  const pushedAudioTrack$ = useMemo(() => partyTracks.push(userMedia.publicAudioTrack$, of([{\n    networkPriority: 'high'\n  }])), [partyTracks, userMedia.publicAudioTrack$]);\n  const pushedAudioTrack = useObservableAsValue(pushedAudioTrack$);\n  const pushedScreenSharingTrack$ = useMemo(() => {\n    return userMedia.screenShareVideoTrack$.pipe(switchMap(track => track ? from(partyTracks.push(of(track))) : of(undefined)));\n  }, [partyTracks, userMedia.screenShareVideoTrack$]);\n  const pushedScreenSharingTrack = useObservableAsValue(pushedScreenSharingTrack$);\n  const [pinnedTileIds, setPinnedTileIds] = useState([]);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const context = {\n    joined,\n    setJoined,\n    pinnedTileIds,\n    setPinnedTileIds,\n    showDebugInfo,\n    setShowDebugInfo,\n    dataSaverMode,\n    setDataSaverMode,\n    traceLink,\n    userMedia,\n    userDirectoryUrl,\n    feedbackEnabled,\n    partyTracks: partyTracks,\n    roomHistory,\n    iceConnectionState,\n    room,\n    pushedTracks: {\n      video: trackObjectToString(pushedVideoTrack),\n      audio: trackObjectToString(pushedAudioTrack),\n      screenshare: trackObjectToString(pushedScreenSharingTrack)\n    }\n  };\n  return <Outlet context={context} />;\n}\n_s2(Room, \"49OmEh0g4D/kAgI1lpX/8sERADM=\", false, function () {\n  return [useParams, useLoaderData, usePeerConnection, useRoomHistory, useStablePojo, useValueAsObservable, useObservableAsValue, useObservableAsValue, useObservableAsValue];\n});\n_c3 = Room;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RoomWithPermissions\");\n$RefreshReg$(_c2, \"RoomPreparation\");\n$RefreshReg$(_c3, \"Room\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useIsOnline.ts\"\n);\nimport.meta.hot.lastModified = \"1738073419116.435\";\n}\n// REMIX HMR END\n\nimport { useSyncExternalStore } from 'react'\n\nfunction getSnapshot() {\n\treturn navigator.onLine\n}\n\nfunction getServerSnapshot() {\n\treturn true\n}\n\nfunction subscribe(callback: () => void) {\n\twindow.addEventListener('online', callback)\n\twindow.addEventListener('offline', callback)\n\treturn () => {\n\t\twindow.removeEventListener('online', callback)\n\t\twindow.removeEventListener('offline', callback)\n\t}\n}\n\nexport function useIsOnline() {\n\treturn useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot)\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/EnsureOnline.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/EnsureOnline.tsx\");\n  import.meta.hot.lastModified = \"1738073419111.4631\";\n}\n// REMIX HMR END\n\nimport { useIsOnline } from '~/hooks/useIsOnline';\nexport function EnsureOnline(props) {\n  _s();\n  const isOnline = useIsOnline();\n  if (!isOnline) {\n    return props.fallback;\n  }\n  return props.children;\n}\n_s(EnsureOnline, \"bAGQ+ieZRXkDkGis+biw2/pOcrw=\", false, function () {\n  return [useIsOnline];\n});\n_c = EnsureOnline;\nvar _c;\n$RefreshReg$(_c, \"EnsureOnline\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/EnsurePermissions.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/EnsurePermissions.tsx\");\n  import.meta.hot.lastModified = \"1738073419111.5378\";\n}\n// REMIX HMR END\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Button } from './Button';\nasync function getExistingPermissionState() {\n  try {\n    const query = await navigator.permissions.query({\n      name: 'microphone'\n    });\n    return query.state;\n  } catch (error) {\n    return 'unable-to-determine';\n  }\n}\nexport function EnsurePermissions(props) {\n  _s();\n  const [permissionState, setPermissionState] = useState(null);\n  const mountedRef = useRef(true);\n  useEffect(() => {\n    getExistingPermissionState().then(result => {\n      if (mountedRef.current) setPermissionState(result);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  if (permissionState === null) return null;\n  if (permissionState === 'denied') {\n    return <div className=\"grid items-center h-full\">\n\t\t\t\t<div className=\"mx-auto space-y-2 max-w-80\">\n\t\t\t\t\t<h1 className=\"text-2xl font-bold\">Permission denied</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou will need to go into your browser settings and manually\n\t\t\t\t\t\tre-enable permission.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>;\n  }\n  if (permissionState === 'prompt') {\n    return <div className=\"grid items-center h-full\">\n\t\t\t\t<div className=\"mx-auto max-w-80\">\n\t\t\t\t\t<p className=\"mb-8\">\n\t\t\t\t\t\tIn order to use Orange Meets, you will need to grant permission to\n\t\t\t\t\t\tyour camera and microphone. You will be prompted for access.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button onClick={() => {\n          navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          }).then(ms => {\n            if (mountedRef.current) setPermissionState('granted');\n            ms.getTracks().forEach(t => t.stop());\n          }).catch(() => {\n            if (mountedRef.current) setPermissionState('denied');\n          });\n        }}>\n\t\t\t\t\t\tAllow access\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>;\n  }\n  return props.children;\n}\n_s(EnsurePermissions, \"k9dg19vmuJ1QBTaBM+2GEzRUIdw=\");\n_c = EnsurePermissions;\nvar _c;\n$RefreshReg$(_c, \"EnsurePermissions\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/usePeerConnection.tsx\"\n);\nimport.meta.hot.lastModified = \"1738073419116.8652\";\n}\n// REMIX HMR END\n\nimport {\n\tPartyTracks,\n\tsetLogLevel,\n\ttype PartyTracksConfig,\n} from 'partytracks/client'\nimport { useObservableAsValue } from 'partytracks/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useStablePojo } from './useStablePojo'\n\nsetLogLevel('debug')\n\nexport const usePeerConnection = (config: PartyTracksConfig) => {\n\tconst stableConfig = useStablePojo(config)\n\tconst partyTracks = useMemo(\n\t\t() => new PartyTracks(stableConfig),\n\t\t[stableConfig]\n\t)\n\tconst peerConnection = useObservableAsValue(partyTracks.peerConnection$)\n\n\tconst [iceConnectionState, setIceConnectionState] =\n\t\tuseState<RTCIceConnectionState>('new')\n\n\tuseEffect(() => {\n\t\tif (!peerConnection) return\n\t\tsetIceConnectionState(peerConnection.iceConnectionState)\n\t\tconst iceConnectionStateChangeHandler = () => {\n\t\t\tsetIceConnectionState(peerConnection.iceConnectionState)\n\t\t}\n\t\tpeerConnection.addEventListener(\n\t\t\t'iceconnectionstatechange',\n\t\t\ticeConnectionStateChangeHandler\n\t\t)\n\t\treturn () => {\n\t\t\tpeerConnection.removeEventListener(\n\t\t\t\t'connectionstatechange',\n\t\t\t\ticeConnectionStateChangeHandler\n\t\t\t)\n\t\t}\n\t}, [peerConnection])\n\n\treturn {\n\t\tpartyTracks,\n\t\ticeConnectionState,\n\t}\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useStablePojo.ts\"\n);\nimport.meta.hot.lastModified = \"1738073419117.6304\";\n}\n// REMIX HMR END\n\nimport { useMemo } from 'react'\n\n/**\n * Useful utility for getting a stable reference to a POJO\n * that might be created on every new render.\n */\nexport function useStablePojo<T>(value: T): T {\n\tconst jsonString = JSON.stringify(value)\n\treturn useMemo(() => JSON.parse(jsonString), [jsonString])\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useRoom.ts\"\n);\nimport.meta.hot.lastModified = \"1738073419117.1052\";\n}\n// REMIX HMR END\n\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport type { ClientMessage, RoomState, ServerMessage } from '~/types/Messages'\nimport assertNever from '~/utils/assertNever'\n\nimport usePartySocket from 'partysocket/react'\nimport type { UserMedia } from './useUserMedia'\n\nexport default function useRoom({\n\troomName,\n\tuserMedia,\n}: {\n\troomName: string\n\tuserMedia: UserMedia\n}) {\n\tconst [roomState, setRoomState] = useState<RoomState>({\n\t\tusers: [],\n\t\tai: { enabled: false },\n\t})\n\n\tconst userLeftFunctionRef = useRef(() => {})\n\n\tuseEffect(() => {\n\t\treturn () => userLeftFunctionRef.current()\n\t}, [])\n\n\tconst websocket = usePartySocket({\n\t\tparty: 'rooms',\n\t\troom: roomName,\n\t\tonMessage: (e) => {\n\t\t\tconst message = JSON.parse(e.data) as ServerMessage\n\t\t\tswitch (message.type) {\n\t\t\t\tcase 'roomState':\n\t\t\t\t\t// prevent updating state if nothing has changed\n\t\t\t\t\tif (JSON.stringify(message.state) === JSON.stringify(roomState)) break\n\t\t\t\t\tsetRoomState(message.state)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.error('Received error message from WebSocket')\n\t\t\t\t\tconsole.error(message.error)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'directMessage':\n\t\t\t\t\tbreak\n\t\t\t\tcase 'muteMic':\n\t\t\t\t\tuserMedia.turnMicOff()\n\t\t\t\t\tbreak\n\t\t\t\tcase 'partyserver-pong':\n\t\t\t\tcase 'aiSdp':\n\t\t\t\t\t// do nothing\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tassertNever(message)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t},\n\t})\n\n\tuserLeftFunctionRef.current = () =>\n\t\twebsocket.send(JSON.stringify({ type: 'userLeft' } satisfies ClientMessage))\n\n\tuseEffect(() => {\n\t\tfunction onBeforeUnload() {\n\t\t\tuserLeftFunctionRef.current()\n\t\t}\n\t\twindow.addEventListener('beforeunload', onBeforeUnload)\n\t\treturn () => {\n\t\t\twindow.removeEventListener('beforeunload', onBeforeUnload)\n\t\t}\n\t}, [websocket])\n\n\t// setup a heartbeat\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\twebsocket.send(\n\t\t\t\tJSON.stringify({ type: 'heartbeat' } satisfies ClientMessage)\n\t\t\t)\n\t\t}, 5_000)\n\n\t\treturn () => clearInterval(interval)\n\t}, [websocket])\n\n\tconst identity = useMemo(\n\t\t() => roomState.users.find((u) => u.id === websocket.id),\n\t\t[roomState.users, websocket.id]\n\t)\n\n\tconst otherUsers = useMemo(\n\t\t() => roomState.users.filter((u) => u.id !== websocket.id && u.joined),\n\t\t[roomState.users, websocket.id]\n\t)\n\n\treturn { identity, otherUsers, websocket, roomState }\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/assertNever.ts\"\n);\nimport.meta.hot.lastModified = \"1738073419121.5674\";\n}\n// REMIX HMR END\n\nexport default function assertNever(\n\t_value: never,\n\tmessage: string = 'Unhandled type: assert never failed'\n) {\n\tthrow new Error(message)\n}\n", "// src/ws.ts\nif (!globalThis.EventTarget || !globalThis.Event) {\n  console.error(`\n  PartySocket requires a global 'EventTarget' class to be available!\n  You can polyfill this global by adding this to your code before any partysocket imports: \n  \n  \\`\\`\\`\n  import 'partysocket/event-target-polyfill';\n  \\`\\`\\`\n  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.\n`);\n}\nvar ErrorEvent = class extends Event {\n  message;\n  error;\n  constructor(error, target) {\n    super(\"error\", target);\n    this.message = error.message;\n    this.error = error;\n  }\n};\nvar CloseEvent = class extends Event {\n  code;\n  reason;\n  wasClean = true;\n  constructor(code = 1e3, reason = \"\", target) {\n    super(\"close\", target);\n    this.code = code;\n    this.reason = reason;\n  }\n};\nvar Events = {\n  Event,\n  ErrorEvent,\n  CloseEvent\n};\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\nfunction cloneEventBrowser(e) {\n  return new e.constructor(e.type, e);\n}\nfunction cloneEventNode(e) {\n  if (\"data\" in e) {\n    const evt2 = new MessageEvent(e.type, e);\n    return evt2;\n  }\n  if (\"code\" in e || \"reason\" in e) {\n    const evt2 = new CloseEvent(\n      // @ts-expect-error we need to fix event/listener types\n      e.code || 1999,\n      // @ts-expect-error we need to fix event/listener types\n      e.reason || \"unknown reason\",\n      e\n    );\n    return evt2;\n  }\n  if (\"error\" in e) {\n    const evt2 = new ErrorEvent(e.error, e);\n    return evt2;\n  }\n  const evt = new Event(e.type, e);\n  return evt;\n}\nvar isNode = typeof process !== \"undefined\" && typeof process.versions?.node !== \"undefined\" && typeof document === \"undefined\";\nvar cloneEvent = isNode ? cloneEventNode : cloneEventBrowser;\nvar DEFAULT = {\n  maxReconnectionDelay: 1e4,\n  minReconnectionDelay: 1e3 + Math.random() * 4e3,\n  minUptime: 5e3,\n  reconnectionDelayGrowFactor: 1.3,\n  connectionTimeout: 4e3,\n  maxRetries: Infinity,\n  maxEnqueuedMessages: Infinity,\n  startClosed: false,\n  debug: false\n};\nvar didWarnAboutMissingWebSocket = false;\nvar ReconnectingWebSocket = class _ReconnectingWebSocket extends EventTarget {\n  _ws;\n  _retryCount = -1;\n  _uptimeTimeout;\n  _connectTimeout;\n  _shouldReconnect = true;\n  _connectLock = false;\n  _binaryType = \"blob\";\n  _closeCalled = false;\n  _messageQueue = [];\n  _debugLogger = console.log.bind(console);\n  _url;\n  _protocols;\n  _options;\n  constructor(url, protocols, options = {}) {\n    super();\n    this._url = url;\n    this._protocols = protocols;\n    this._options = options;\n    if (this._options.startClosed) {\n      this._shouldReconnect = false;\n    }\n    if (this._options.debugLogger) {\n      this._debugLogger = this._options.debugLogger;\n    }\n    this._connect();\n  }\n  static get CONNECTING() {\n    return 0;\n  }\n  static get OPEN() {\n    return 1;\n  }\n  static get CLOSING() {\n    return 2;\n  }\n  static get CLOSED() {\n    return 3;\n  }\n  get CONNECTING() {\n    return _ReconnectingWebSocket.CONNECTING;\n  }\n  get OPEN() {\n    return _ReconnectingWebSocket.OPEN;\n  }\n  get CLOSING() {\n    return _ReconnectingWebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return _ReconnectingWebSocket.CLOSED;\n  }\n  get binaryType() {\n    return this._ws ? this._ws.binaryType : this._binaryType;\n  }\n  set binaryType(value) {\n    this._binaryType = value;\n    if (this._ws) {\n      this._ws.binaryType = value;\n    }\n  }\n  /**\n   * Returns the number or connection retries\n   */\n  get retryCount() {\n    return Math.max(this._retryCount, 0);\n  }\n  /**\n   * The number of bytes of data that have been queued using calls to send() but not yet\n   * transmitted to the network. This value resets to zero once all queued data has been sent.\n   * This value does not reset to zero when the connection is closed; if you keep calling send(),\n   * this will continue to climb. Read only\n   */\n  get bufferedAmount() {\n    const bytes = this._messageQueue.reduce((acc, message) => {\n      if (typeof message === \"string\") {\n        acc += message.length;\n      } else if (message instanceof Blob) {\n        acc += message.size;\n      } else {\n        acc += message.byteLength;\n      }\n      return acc;\n    }, 0);\n    return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n  }\n  /**\n   * The extensions selected by the server. This is currently only the empty string or a list of\n   * extensions as negotiated by the connection\n   */\n  get extensions() {\n    return this._ws ? this._ws.extensions : \"\";\n  }\n  /**\n   * A string indicating the name of the sub-protocol the server selected;\n   * this will be one of the strings specified in the protocols parameter when creating the\n   * WebSocket object\n   */\n  get protocol() {\n    return this._ws ? this._ws.protocol : \"\";\n  }\n  /**\n   * The current state of the connection; this is one of the Ready state constants\n   */\n  get readyState() {\n    if (this._ws) {\n      return this._ws.readyState;\n    }\n    return this._options.startClosed ? _ReconnectingWebSocket.CLOSED : _ReconnectingWebSocket.CONNECTING;\n  }\n  /**\n   * The URL as resolved by the constructor\n   */\n  get url() {\n    return this._ws ? this._ws.url : \"\";\n  }\n  /**\n   * Whether the websocket object is now in reconnectable state\n   */\n  get shouldReconnect() {\n    return this._shouldReconnect;\n  }\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\n   */\n  onclose = null;\n  /**\n   * An event listener to be called when an error occurs\n   */\n  onerror = null;\n  /**\n   * An event listener to be called when a message is received from the server\n   */\n  onmessage = null;\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n   * this indicates that the connection is ready to send and receive data\n   */\n  onopen = null;\n  /**\n   * Closes the WebSocket connection or connection attempt, if any. If the connection is already\n   * CLOSED, this method does nothing\n   */\n  close(code = 1e3, reason) {\n    this._closeCalled = true;\n    this._shouldReconnect = false;\n    this._clearTimeouts();\n    if (!this._ws) {\n      this._debug(\"close enqueued: no ws instance\");\n      return;\n    }\n    if (this._ws.readyState === this.CLOSED) {\n      this._debug(\"close: already closed\");\n      return;\n    }\n    this._ws.close(code, reason);\n  }\n  /**\n   * Closes the WebSocket connection or connection attempt and connects again.\n   * Resets retry counter;\n   */\n  reconnect(code, reason) {\n    this._shouldReconnect = true;\n    this._closeCalled = false;\n    this._retryCount = -1;\n    if (!this._ws || this._ws.readyState === this.CLOSED) {\n      this._connect();\n    } else {\n      this._disconnect(code, reason);\n      this._connect();\n    }\n  }\n  /**\n   * Enqueue specified data to be transmitted to the server over the WebSocket connection\n   */\n  send(data) {\n    if (this._ws && this._ws.readyState === this.OPEN) {\n      this._debug(\"send\", data);\n      this._ws.send(data);\n    } else {\n      const { maxEnqueuedMessages = DEFAULT.maxEnqueuedMessages } = this._options;\n      if (this._messageQueue.length < maxEnqueuedMessages) {\n        this._debug(\"enqueue\", data);\n        this._messageQueue.push(data);\n      }\n    }\n  }\n  _debug(...args) {\n    if (this._options.debug) {\n      this._debugLogger(\"RWS>\", ...args);\n    }\n  }\n  _getNextDelay() {\n    const {\n      reconnectionDelayGrowFactor = DEFAULT.reconnectionDelayGrowFactor,\n      minReconnectionDelay = DEFAULT.minReconnectionDelay,\n      maxReconnectionDelay = DEFAULT.maxReconnectionDelay\n    } = this._options;\n    let delay = 0;\n    if (this._retryCount > 0) {\n      delay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\n      if (delay > maxReconnectionDelay) {\n        delay = maxReconnectionDelay;\n      }\n    }\n    this._debug(\"next delay\", delay);\n    return delay;\n  }\n  _wait() {\n    return new Promise((resolve) => {\n      setTimeout(resolve, this._getNextDelay());\n    });\n  }\n  _getNextProtocols(protocolsProvider) {\n    if (!protocolsProvider) return Promise.resolve(null);\n    if (typeof protocolsProvider === \"string\" || Array.isArray(protocolsProvider)) {\n      return Promise.resolve(protocolsProvider);\n    }\n    if (typeof protocolsProvider === \"function\") {\n      const protocols = protocolsProvider();\n      if (!protocols) return Promise.resolve(null);\n      if (typeof protocols === \"string\" || Array.isArray(protocols)) {\n        return Promise.resolve(protocols);\n      }\n      if (protocols.then) {\n        return protocols;\n      }\n    }\n    throw Error(\"Invalid protocols\");\n  }\n  _getNextUrl(urlProvider) {\n    if (typeof urlProvider === \"string\") {\n      return Promise.resolve(urlProvider);\n    }\n    if (typeof urlProvider === \"function\") {\n      const url = urlProvider();\n      if (typeof url === \"string\") {\n        return Promise.resolve(url);\n      }\n      if (url.then) {\n        return url;\n      }\n    }\n    throw Error(\"Invalid URL\");\n  }\n  _connect() {\n    if (this._connectLock || !this._shouldReconnect) {\n      return;\n    }\n    this._connectLock = true;\n    const {\n      maxRetries = DEFAULT.maxRetries,\n      connectionTimeout = DEFAULT.connectionTimeout\n    } = this._options;\n    if (this._retryCount >= maxRetries) {\n      this._debug(\"max retries reached\", this._retryCount, \">=\", maxRetries);\n      return;\n    }\n    this._retryCount++;\n    this._debug(\"connect\", this._retryCount);\n    this._removeListeners();\n    this._wait().then(\n      () => Promise.all([\n        this._getNextUrl(this._url),\n        this._getNextProtocols(this._protocols || null)\n      ])\n    ).then(([url, protocols]) => {\n      if (this._closeCalled) {\n        this._connectLock = false;\n        return;\n      }\n      if (!this._options.WebSocket && typeof WebSocket === \"undefined\" && !didWarnAboutMissingWebSocket) {\n        console.error(`\\u203C\\uFE0F No WebSocket implementation available. You should define options.WebSocket. \n\nFor example, if you're using node.js, run \\`npm install ws\\`, and then in your code:\n\nimport PartySocket from 'partysocket';\nimport WS from 'ws';\n\nconst partysocket = new PartySocket({\n  host: \"127.0.0.1:1999\",\n  room: \"test-room\",\n  WebSocket: WS\n});\n\n`);\n        didWarnAboutMissingWebSocket = true;\n      }\n      const WS = this._options.WebSocket || WebSocket;\n      this._debug(\"connect\", { url, protocols });\n      this._ws = protocols ? new WS(url, protocols) : new WS(url);\n      this._ws.binaryType = this._binaryType;\n      this._connectLock = false;\n      this._addListeners();\n      this._connectTimeout = setTimeout(\n        () => this._handleTimeout(),\n        connectionTimeout\n      );\n    }).catch((err) => {\n      this._connectLock = false;\n      this._handleError(new Events.ErrorEvent(Error(err.message), this));\n    });\n  }\n  _handleTimeout() {\n    this._debug(\"timeout event\");\n    this._handleError(new Events.ErrorEvent(Error(\"TIMEOUT\"), this));\n  }\n  _disconnect(code = 1e3, reason) {\n    this._clearTimeouts();\n    if (!this._ws) {\n      return;\n    }\n    this._removeListeners();\n    try {\n      if (this._ws.readyState === this.OPEN) {\n        this._ws.close(code, reason);\n      }\n      this._handleClose(new Events.CloseEvent(code, reason, this));\n    } catch (error) {\n    }\n  }\n  _acceptOpen() {\n    this._debug(\"accept open\");\n    this._retryCount = 0;\n  }\n  _handleOpen = (event) => {\n    this._debug(\"open event\");\n    const { minUptime = DEFAULT.minUptime } = this._options;\n    clearTimeout(this._connectTimeout);\n    this._uptimeTimeout = setTimeout(() => this._acceptOpen(), minUptime);\n    assert(this._ws, \"WebSocket is not defined\");\n    this._ws.binaryType = this._binaryType;\n    this._messageQueue.forEach((message) => this._ws?.send(message));\n    this._messageQueue = [];\n    if (this.onopen) {\n      this.onopen(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleMessage = (event) => {\n    this._debug(\"message event\");\n    if (this.onmessage) {\n      this.onmessage(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _handleError = (event) => {\n    this._debug(\"error event\", event.message);\n    this._disconnect(\n      void 0,\n      event.message === \"TIMEOUT\" ? \"timeout\" : void 0\n    );\n    if (this.onerror) {\n      this.onerror(event);\n    }\n    this._debug(\"exec error listeners\");\n    this.dispatchEvent(cloneEvent(event));\n    this._connect();\n  };\n  _handleClose = (event) => {\n    this._debug(\"close event\");\n    this._clearTimeouts();\n    if (this._shouldReconnect) {\n      this._connect();\n    }\n    if (this.onclose) {\n      this.onclose(event);\n    }\n    this.dispatchEvent(cloneEvent(event));\n  };\n  _removeListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"removeListeners\");\n    this._ws.removeEventListener(\"open\", this._handleOpen);\n    this._ws.removeEventListener(\"close\", this._handleClose);\n    this._ws.removeEventListener(\"message\", this._handleMessage);\n    this._ws.removeEventListener(\"error\", this._handleError);\n  }\n  _addListeners() {\n    if (!this._ws) {\n      return;\n    }\n    this._debug(\"addListeners\");\n    this._ws.addEventListener(\"open\", this._handleOpen);\n    this._ws.addEventListener(\"close\", this._handleClose);\n    this._ws.addEventListener(\"message\", this._handleMessage);\n    this._ws.addEventListener(\"error\", this._handleError);\n  }\n  _clearTimeouts() {\n    clearTimeout(this._connectTimeout);\n    clearTimeout(this._uptimeTimeout);\n  }\n};\n\nexport {\n  ErrorEvent,\n  CloseEvent,\n  ReconnectingWebSocket\n};\n/*!\n * Reconnecting WebSocket\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\n * https://github.com/pladaria/reconnecting-websocket\n * License MIT\n */\n", "import {\n  ReconnectingWebSocket\n} from \"./chunk-KAXDW7R4.mjs\";\n\n// src/index.ts\nvar valueIsNotNil = (keyValuePair) => keyValuePair[1] !== null && keyValuePair[1] !== void 0;\nfunction generateUUID() {\n  if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  let d = (/* @__PURE__ */ new Date()).getTime();\n  let d2 = typeof performance !== \"undefined\" && performance.now && performance.now() * 1e3 || 0;\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : r & 3 | 8).toString(16);\n  });\n}\nfunction getPartyInfo(partySocketOptions, defaultProtocol, defaultParams = {}) {\n  const {\n    host: rawHost,\n    path: rawPath,\n    protocol: rawProtocol,\n    room,\n    party,\n    prefix,\n    query\n  } = partySocketOptions;\n  let host = rawHost.replace(/^(http|https|ws|wss):\\/\\//, \"\");\n  if (host.endsWith(\"/\")) {\n    host = host.slice(0, -1);\n  }\n  if (rawPath && rawPath.startsWith(\"/\")) {\n    throw new Error(\"path must not start with a slash\");\n  }\n  const name = party ?? \"main\";\n  const path = rawPath ? `/${rawPath}` : \"\";\n  const protocol = rawProtocol || (host.startsWith(\"localhost:\") || host.startsWith(\"127.0.0.1:\") || host.startsWith(\"192.168.\") || host.startsWith(\"10.\") || host.startsWith(\"172.\") && host.split(\".\")[1] >= \"16\" && host.split(\".\")[1] <= \"31\" || host.startsWith(\"[::ffff:7f00:1]:\") ? (\n    // http / ws\n    defaultProtocol\n  ) : (\n    // https / wss\n    defaultProtocol + \"s\"\n  ));\n  const baseUrl = `${protocol}://${host}/${prefix || `parties/${name}/${room}`}${path}`;\n  const makeUrl = (query2 = {}) => `${baseUrl}?${new URLSearchParams([\n    ...Object.entries(defaultParams),\n    ...Object.entries(query2).filter(valueIsNotNil)\n  ])}`;\n  const urlProvider = typeof query === \"function\" ? async () => makeUrl(await query()) : makeUrl(query);\n  return {\n    host,\n    path,\n    room,\n    name,\n    protocol,\n    partyUrl: baseUrl,\n    urlProvider\n  };\n}\nvar PartySocket = class extends ReconnectingWebSocket {\n  constructor(partySocketOptions) {\n    const wsOptions = getWSOptions(partySocketOptions);\n    super(wsOptions.urlProvider, wsOptions.protocols, wsOptions.socketOptions);\n    this.partySocketOptions = partySocketOptions;\n    this.setWSProperties(wsOptions);\n  }\n  _pk;\n  _pkurl;\n  name;\n  room;\n  host;\n  path;\n  updateProperties(partySocketOptions) {\n    const wsOptions = getWSOptions({\n      ...this.partySocketOptions,\n      ...partySocketOptions,\n      host: partySocketOptions.host ?? this.host,\n      room: partySocketOptions.room ?? this.room,\n      path: partySocketOptions.path ?? this.path\n    });\n    this._url = wsOptions.urlProvider;\n    this._protocols = wsOptions.protocols;\n    this._options = wsOptions.socketOptions;\n    this.setWSProperties(wsOptions);\n  }\n  setWSProperties(wsOptions) {\n    const { _pk, _pkurl, name, room, host, path } = wsOptions;\n    this._pk = _pk;\n    this._pkurl = _pkurl;\n    this.name = name;\n    this.room = room;\n    this.host = host;\n    this.path = path;\n  }\n  reconnect(code, reason) {\n    if (!this.room || !this.host) {\n      throw new Error(\n        \"The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.\"\n      );\n    }\n    super.reconnect(code, reason);\n  }\n  get id() {\n    return this._pk;\n  }\n  /**\n   * Exposes the static PartyKit room URL without applying query parameters.\n   * To access the currently connected WebSocket url, use PartySocket#url.\n   */\n  get roomUrl() {\n    return this._pkurl;\n  }\n  // a `fetch` method that uses (almost) the same options as `PartySocket`\n  static async fetch(options, init) {\n    const party = getPartyInfo(options, \"http\");\n    const url = typeof party.urlProvider === \"string\" ? party.urlProvider : await party.urlProvider();\n    const doFetch = options.fetch ?? fetch;\n    return doFetch(url, init);\n  }\n};\nfunction getWSOptions(partySocketOptions) {\n  const {\n    id,\n    host: _host,\n    path: _path,\n    party: _party,\n    room: _room,\n    protocol: _protocol,\n    query: _query,\n    protocols,\n    ...socketOptions\n  } = partySocketOptions;\n  const _pk = id || generateUUID();\n  const party = getPartyInfo(partySocketOptions, \"ws\", { _pk });\n  return {\n    _pk,\n    _pkurl: party.partyUrl,\n    name: party.name,\n    room: party.room,\n    host: party.host,\n    path: party.path,\n    protocols,\n    socketOptions,\n    urlProvider: party.urlProvider\n  };\n}\n\nexport {\n  PartySocket\n};\n", "import {\n  ReconnectingWebSocket\n} from \"./chunk-KAXDW7R4.mjs\";\n\n// src/use-handlers.ts\nimport { useEffect, useRef } from \"react\";\nvar useAttachWebSocketEventHandlers = (socket, options) => {\n  const handlersRef = useRef(options);\n  handlersRef.current = options;\n  useEffect(() => {\n    const onOpen = (event) => handlersRef.current?.onOpen?.(event);\n    const onMessage = (event) => handlersRef.current?.onMessage?.(event);\n    const onClose = (event) => handlersRef.current?.onClose?.(event);\n    const onError = (event) => handlersRef.current?.onError?.(event);\n    socket.addEventListener(\"open\", onOpen);\n    socket.addEventListener(\"close\", onClose);\n    socket.addEventListener(\"error\", onError);\n    socket.addEventListener(\"message\", onMessage);\n    return () => {\n      socket.removeEventListener(\"open\", onOpen);\n      socket.removeEventListener(\"close\", onClose);\n      socket.removeEventListener(\"error\", onError);\n      socket.removeEventListener(\"message\", onMessage);\n    };\n  }, [socket]);\n};\n\n// src/use-socket.ts\nimport { useEffect as useEffect2, useMemo, useRef as useRef2, useState } from \"react\";\nvar getOptionsThatShouldCauseRestartWhenChanged = (options) => [\n  options.startClosed,\n  options.minUptime,\n  options.maxRetries,\n  options.connectionTimeout,\n  options.maxEnqueuedMessages,\n  options.maxReconnectionDelay,\n  options.minReconnectionDelay,\n  options.reconnectionDelayGrowFactor,\n  options.debug\n];\nfunction useStableSocket({\n  options,\n  createSocket,\n  createSocketMemoKey: createOptionsMemoKey\n}) {\n  const shouldReconnect = createOptionsMemoKey(options);\n  const socketOptions = useMemo(() => {\n    return options;\n  }, [shouldReconnect]);\n  const [socket, setSocket] = useState(\n    () => (\n      // only connect on first mount\n      createSocket({ ...socketOptions, startClosed: true })\n    )\n  );\n  const socketInitializedRef = useRef2(null);\n  const createSocketRef = useRef2(createSocket);\n  createSocketRef.current = createSocket;\n  useEffect2(() => {\n    if (socketInitializedRef.current === socket) {\n      const newSocket = createSocketRef.current({\n        ...socketOptions,\n        // when reconnecting because of options change, we always reconnect\n        // (startClosed only applies to initial mount)\n        startClosed: false\n      });\n      setSocket(newSocket);\n    } else {\n      if (!socketInitializedRef.current && socketOptions.startClosed !== true) {\n        socket.reconnect();\n      }\n      socketInitializedRef.current = socket;\n      return () => {\n        socket.close();\n      };\n    }\n  }, [socket, socketOptions]);\n  return socket;\n}\n\n// src/use-ws.ts\nfunction useWebSocket(url, protocols, options = {}) {\n  const socket = useStableSocket({\n    options,\n    createSocket: (options2) => new ReconnectingWebSocket(url, protocols, options2),\n    createSocketMemoKey: (options2) => JSON.stringify([\n      // will reconnect if url or protocols are specified as a string.\n      // if they are functions, the WebSocket will handle reconnection\n      url,\n      protocols,\n      ...getOptionsThatShouldCauseRestartWhenChanged(options2)\n    ])\n  });\n  useAttachWebSocketEventHandlers(socket, options);\n  return socket;\n}\n\nexport {\n  useAttachWebSocketEventHandlers,\n  getOptionsThatShouldCauseRestartWhenChanged,\n  useStableSocket,\n  useWebSocket\n};\n", "import {\n  PartySocket\n} from \"./chunk-QEVAA5MN.mjs\";\nimport {\n  getOptionsThatShouldCauseRestartWhenChanged,\n  useAttachWebSocketEventHandlers,\n  useStableSocket,\n  useWebSocket\n} from \"./chunk-BZZROSLB.mjs\";\nimport \"./chunk-KAXDW7R4.mjs\";\n\n// src/react.ts\nfunction usePartySocket(options) {\n  const { host, ...otherOptions } = options;\n  const socket = useStableSocket({\n    options: {\n      host: host || (typeof window !== \"undefined\" ? window.location.host : \"dummy-domain.com\"),\n      ...otherOptions\n    },\n    createSocket: (options2) => new PartySocket(options2),\n    createSocketMemoKey: (options2) => JSON.stringify([\n      // NOTE: if query is defined as a function, the socket\n      // won't reconnect when you change the function identity\n      options2.query,\n      options2.id,\n      options2.host,\n      options2.room,\n      options2.party,\n      options2.path,\n      options2.protocol,\n      options2.protocols,\n      ...getOptionsThatShouldCauseRestartWhenChanged(options2)\n    ])\n  });\n  useAttachWebSocketEventHandlers(socket, options);\n  return socket;\n}\nexport {\n  usePartySocket as default,\n  usePartySocket,\n  useWebSocket\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useRoomHistory.ts\"\n);\nimport.meta.hot.lastModified = \"1738073419117.3083\";\n}\n// REMIX HMR END\n\nimport type { ApiHistoryEntry, PartyTracks } from 'partytracks/client'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport type useRoom from './useRoom'\n\ninterface UserSession {\n\tusername: string\n\tsessionId: string\n}\n\nexport interface RoomHistory {\n\tapiHistory: ApiHistoryEntry[]\n\tuserSessions: UserSession[]\n}\n\nexport function useRoomHistory(\n\tpartyTracks: PartyTracks,\n\troom: ReturnType<typeof useRoom>\n): RoomHistory {\n\tconst [apiHistory, setApiHistory] = useState<ApiHistoryEntry[]>([])\n\tconst [userSessionsWithoutTraceLinks, setUserSessions] = useState<\n\t\tUserSession[]\n\t>([])\n\tconst sessionIdsRef = useRef(new Set<string>())\n\n\tuseEffect(() => {\n\t\tconst handleHistory = () => {\n\t\t\tsetApiHistory(partyTracks.history.entries)\n\t\t}\n\t\tpartyTracks.history.addEventListener('logentry', handleHistory)\n\n\t\treturn () => {\n\t\t\tpartyTracks.history.removeEventListener('logentry', handleHistory)\n\t\t}\n\t}, [partyTracks])\n\n\tuseEffect(() => {\n\t\troom.otherUsers.forEach((user) => {\n\t\t\tif (user.transceiverSessionId === undefined) return\n\t\t\tif (sessionIdsRef.current.has(user.transceiverSessionId)) return\n\t\t\tsessionIdsRef.current.add(user.transceiverSessionId)\n\t\t\tconst userSession = {\n\t\t\t\tsessionId: user.transceiverSessionId,\n\t\t\t\tusername: user.name,\n\t\t\t} satisfies UserSession\n\t\t\tsetUserSessions((s) => [...s, userSession])\n\t\t})\n\t}, [room.otherUsers])\n\n\tconst userSessions = useMemo(\n\t\t() =>\n\t\t\tuserSessionsWithoutTraceLinks.map((s) => ({\n\t\t\t\t...s,\n\t\t\t})),\n\t\t[userSessionsWithoutTraceLinks]\n\t)\n\n\treturn {\n\t\tapiHistory,\n\t\tuserSessions,\n\t}\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "_s", "_c", "import_react", "import_react", "import_react", "import_react", "useRef2", "useEffect2", "import_react", "import_jsx_dev_runtime", "_s", "_s2", "_c", "_s", "_c2", "_s2", "_c3"]
}
